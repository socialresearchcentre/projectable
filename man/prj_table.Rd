% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project_table.R
\name{prj_table}
\alias{prj_table}
\title{project_table}
\usage{
prj_table(.data, ...)
}
\arguments{
\item{.data}{a dataframe, ideally one containing \verb{col_*}s}

\item{.cols}{an optional named list of character vectors
specifying how columns are to be projected.

If nothing is supplied to \code{.cols} then a default specification will be used:
all columns will be mapped to their 'face' value. For scalar numbers, the
face value is equal to the scalar; for \verb{col_*} the face value is whatever is
displayed when the \verb{col_*} is printed to the console.}
}
\value{
a \code{projection} object
}
\description{
The \code{project_table()} function is designed to take in a metadata rich
table-like object, i.e. a dataframe made up of projectable
\verb{col_*}s, and to 'flatten' it out as per the instructions provided in the
column specification.
}
\details{
The column specification, \code{.col}, tells R what pieces of information (data
and or metadata) to extract from each of the columns in the \code{.data}. The
resulting \code{projection} object will contain one column for each piece of
information specified in \code{.col}. Thus one \code{col_freq} might be projected into
three different columns in the output: one for the \code{p}, one for the
\code{n}, and one for the \code{N} belonging to it.

The \code{projection} output will also come attached with metadata which keeps
track of which columns in the output belong to which columns in the input.
}
\examples{
# Cross tabulate frequencies and store with accompanying metadata
x <- as.data.frame(lapply(
  split(mtcars$cyl, mtcars$vs),
  function(x) {col_freq(c(sum(x==4), sum(x==6), sum(x==8)), length(x))}
))
names(x) <- c("non_V", "V")
x$cyl <- c(4, 6, 7)

# Project metadata rich frequency cross tab into two dimensions
project_table(x, .cols = list(
  cyl = "identity",
  non_V = c("p", "N"),
  V = c("p", "N")
))

}
