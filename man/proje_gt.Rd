% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proje_gt.R
\name{proje_gt}
\alias{proje_gt}
\title{proje_gt}
\usage{
proje_gt(projection, ...)
}
\arguments{
\item{projection}{a \code{projection} object, typically one created with \code{project_table()}}

\item{...}{additional arguments to pass on to \code{gt::gt()}}
}
\value{
an object of class \code{gt_tbl}
}
\description{
The proje_gt() function creates a gt table object when provided with a
\code{projection} object. The typical workflow will involve first passing a
meta-data rich dataframe along with a column specification through to
\code{project_table()}, and then passing the resulting \code{projection} object through
to \code{proje_gt()} for formatting using functions from the \code{gt} package.
}
\details{
The resulting \code{gt_tbl} object will have spanner columns corresponding to each
name in the column specification, which in turn correspond to names of
variables in the underlying dataframe. Underneath each spanner column there
will be columns with labels corresponding to the elements of the relevant
character vector provided in the column specification, which in turn
correspond to fields of variables in the underlying dataframe.
}
\examples{
# Cross tabulate number of cylinders against engine shape
x <- as.data.frame(lapply(
  split(mtcars$cyl, mtcars$vs),
  function(x) {col_freq(c(sum(x==4), sum(x==6), sum(x==8)), length(x))}
))
names(x) <- c("non_V", "V")
x$cyl <- c(4, 6, 7)

# Create a `gt_tbl` with proportions and base counts
proje_gt(
  project_table(x, .cols = list(
    cyl = "identity",
    non_V = c("proportion", "big_n"),
    V = c("proportion", "big_n")
  ))
)
}
